전체 프로젝트 공유 : https://bit.ly/2ZaI9sJ

0. 학번 : 2000

[프로젝트 1 : classcard형식의 지구과학 암기 학습 게임]
1)연구소 이름 : gold챠오니 도깨비 연구소
2)연구소가 해결하려는 문제 : 
지구과학을 암기하기 힘들어서 게임형식으로 바꾸어서 암기를 쉽게 할 수 있도록 도운다.
3)연구소의 깃헙 링크 : https://github.com/keumchaewon/keumjeong/blob/greatsong/project
4)내가 기여한 내용
### 금채원 정서우 코드
import matplotlib.pyplot as plt # matplotlib.pyplot이라는 함수를 plt로 불러온다
from matplotlib.image import imread #matplotlib.image라는 함수에서 imread라는 함수를 불러온다
import random #랜덤함수를 불러온다

pic = ['갑주어_고생대_.PNG', '공룡_중생대_.PNG', '매머드_신생대_.PNG', '방추충_고생대_.PNG',
       '삼엽충_고생대_.PNG', '스트로마톨라이트_선캄브리아_.PNG', '암모나이트_중생대_.PNG', 
       '디킨소니아_선캄브리아_.PNG', '필석_고생대_.PNG', '화폐석_신생대_.PNG'] # 지학공부를 할 생물과 시대가 들어간 사진을 하나의 리스트에 넣는다

game = True # game이 참이라면

nscore = 0 #누적점수지정
score = 0 #점수지정

#cho = input("이름 학습을 플레이하려면 1, 시대 학습을 플레이하려면 2를 입력해주세요.")

while game == True : #game이 참일동안에
    
    cho = input("이름 학습을 플레이하려면 1, 시대 학습을 플레이하려면 2를 입력해주세요.") #공부하고 싶은 종류를 선택한다(여기서는 시대와 이름을 학습한다.)
    
    if cho in "1, 2" : # 1과 2중 하나를 선택했다면

        while pic != [] : #pic라는 리스트가 비기 전까지 이 함수를 실행한다.
            a = random.randint(0, len(pic)-1) #0부터 리스트에 들어간 사진수-1 중 하나의 수를 뽑는다
            play = pic.pop(a) #pic이라는 리스트에서 a로 뽑은 수에 해당하는 사진을 pop시킨다.
            img = imread(play) # pop한 사진을 읽어서
            plt.imshow(img) # plt함수를 이용하여 띄우고
            plt.show() # 그것을 창으로 보여준다.

            name = input("답을 입력해주세요. (학습을 중단하시려면 '그만'을 입력하세요)") #그 사진에 해당하는 답을 입력하거나 '그만'을 입력하여 게임을 멈춘다

            if name == "그만" : #만약 그만을 입력하였다면
                print("학습을 중단하셨습니다. 현재까지 누적 점수는", nscore, "점 입니다.") #그동안 맞춘 문제의 개수만큼의 점수를 표시해준다.
                break # 함수의 실행을 멈춘다.

            elif cho == '1' : #그만을 입력하지 않고, 처음고를때 1번 종류를 골랐다면
                if name == play.split('_')[0] : # 사진의 이름을'-'를 기준으로 스플릿 했을때 첫항에 있는 것과 동일하다면
                    print("정답입니다. +1") #정답이라고 print를 해준다.
                    score += 1 #점수를 1점 올린다.
                    nscore += 1 #누적점수를 1점 올린다.
                else : #만약 동일하지 않다면
                    print("오답입니다. -1",  "( 답 :", play.split('_')[0], ")") # 오답이라고 print라고 해준다.
                    score -= 1 #점수에서 1점 감점을 한다.
                    nscore -= 1 #누적점수에서 1점 감점을 한다.
                    pic.append(play) #그리고 pop했던 사진을 다시 pic리스트에 append한다.

            elif cho == '2' : #만약 처음 고를때 2번종류를 골랐다면
                if name == play.split('_')[1] : #'-' 기준으로 분리했을때 뒷항에 있는 것과 동일하다면
                    print("정답입니다. +1") #정답이라고 print를 해주고
                    score += 1 #점수를 1점 올려준다.
                    nscore += 1 #누적점수를 1점 올려준다.
                else : #만약 오답을 말한다면
                    print("오답입니다. -1",  "( 답 :", play.split('_')[1], ")") #오답이라고 print해주고
                    score -= 1 #점수에서 1점 감점을 한다.
                    nscore -= 1 #누적점수에서 1점 감점을 한다.
                    pic.append(play) #그리고 pop했던 사진을 다시 pic리스트에 append한다.

        print("학습 완료. 당신의 점수는", score, "점 입니다.(누적 점수 :", nscore, ")") #모든 게임이 끝났을때 점수와 누적 점수를 print해준다.
        
        new = input("새 게임을 시작하시겠습니까? 예 / 아니오") #새 게임을 시작할 것인 지에 대한 여부를 묻는다.
        
        if new == '예' : # 만약 예로 답한다면
            game = True # game을 참으로 하고 게임을 다시 진행한다.
            score = 0 # 점수는 다시 0으로 만든다.
            pic = ['갑주어_고생대_.PNG', '공룡_중생대_.PNG', '매머드_신생대_.PNG', '방추충_고생대_.PNG',
           '삼엽충_고생대_.PNG', '스트로마톨라이트_선캄브리아_.PNG', '암모나이트_중생대_.PNG', 
           '디킨소니아_선캄브리아_.PNG', '필석_고생대_.PNG', '화폐석_신생대_.PNG'] #처음과 동일하게 pic라는 리스트를 설정한다.
        else : 
            game = False # 만약 예라는 답변이 아니라면 game을 끝낸다.

                
    else : # 만약 1과 2외에 다른 것을 입력한다면
        game = False #game을 비활성화 시킨다.
        print("입력이 잘못되었습니다.") #잘못 입력하였다고 print해준다.
        
print("학습이 종료됩니다.") #학습이 종료되었다고 print해준다.
5)내가 기여한 내용에 대한 설명
각 코드마다 이해하기 쉽도록 주석을 달았다.
6)내가 기여한 내용의 반영 여부 : X

[프로젝트 2 : 영의 슬릿실험에 따른 밝기 그래프를 실험없이 보여주는 프로그램]
1)연구소 이름 : 고충연구소
2)연구소가 해결하려는 문제 : 물리시간에 실험을 하느라 시간을 많이 써야 하지만 진도가 급해 시간이 아까운 물리 선생님
3)연구소의 깃헙 링크 :https://github.com/09m1jh/python27_2019/tree/master
4)내가 기여한 내용
##슬릿과 관련된 조
import matplotlib.pyplot as plt #matplotlib,pyplot이라는 함수를 불러온다.
import math #math라는 함수를 불러온다
import numpy as np #numpy라는 함수를 np로 불러온다
n = input('슬릿 개수를 입력해주세요') # 파장 변수: 위상차, 진폭, 파장
if int(n) > 2: #만약 입려된 슬릿의 값이 2보다 크다면
    print('아직 해결할 수 없는 문제입니다.') #"아직 해결할 수 없는 문제입니다"를 프린트한다
else:#만약 입력한 숫자가 2이하라면
    
    d = float(input('슬릿 두께를 입력해주세요'))*10**-6 #슬릿의 두께를 마이크로 단위로 실수형태로 입력받는다.
    ramda = float(input("사용한 빛의 파장을 입력해주세요"))*10**-9 #파장을 nm단위로 입력을 받는다.
    k = 2*math.pi/ramda #각파수를 설정하고
    L = 1 #스크린 과의 거리가 1m라고 하였을때
    if int(n) == 1 : #만약 슬릿의 갯수가 1개라면
        x = np.linspace(-10,-0.1,100) + np.linspace(0.1,10,100) #정의역을 -10~-0.1까지 와 0.1~10까지를 각각 100등분씩하여 설정한다.
        y = [((math.sin((k*d*i)/((L**2+i**2)**0.5)/2)**2)/((k*d*i/(L**2+i**2)**0.5/2)**2)) for i in x] #빛의 세기와 관련된 식에 각각의 정의역의 원소들을 대입하여
        plt.plot(x,y) #x와 y에 대한 그래프를 그려서
        plt.show() #창으로 보여준다.
    if int(n) == 2 : #만약 슬릿의 갯수가 2개라면
        a = float(input('슬릿 사이 간격을 입력해주세요'))*10**-2 #슬릿 사이 간격을 cm단위로 입력받아서
        x = np.linspace(-10,-0.1,100) + np.linspace(0.1,10,100) #정의역을 -10~-0.1까지 와 0.1~10까지를 각각 100등분씩하여 설정한다.
        y = [((math.sin((k*d*i)/((L**2+i**2)**0.5)/2)**2)/((k*d*i/(L**2+i**2)**0.5/2)**2))*(math.cos(k*a*i/(L**2+i**2)**0.5/2)**2) for i in x] #빛의 세기와 관련된 식에 각각의 정의역의 원소들을 대입하여
        plt.plot(x,y) #x와 y에 대한 그래프를 그려서
        plt.show() #창으로 보여준다.
5)내가 기여한 내용에 대한 설명
파장을 정해져 있던 거에서 직접 입력할 수 있도록 코드를 추가하였고, 코드를 이해할 수 있도록 주석을 달았다.
6)내가 기여한 내용의 반영 여부 : X

[프로젝트 3 : 산&염기, 산화&환원 적정 실험 안내 프로그램]
1)연구소 이름 : 노서John. LAB.
2)연구소가 해결하려는 문제 : 산염기와 산화환원실험단계를 알려주는 코드이다.
3)연구소의 깃헙 링크 : https://github.com/bugs1015/2019-1-/blob/master/2019%202216%202202.ipynb
4)내가 기여한 내용
import time  #실험 과정에서 시간차를 두고 출력하기 위해 시간함수 도입
e = input("산화환원 적정과 산염기 적정 중 진행하고자 하는 실험을 선택하세요.")  #산화환원 적정실험에 대한 기능, 산염기 적정실험에 대한 기능중 선택

sa = ["황산", "염산", "질산", "염소산"]  #강산 리스트
wa = ["아세트산", "아염소산", "하이퍼아염소산"]  #약산 리스트
sb = ["수산화나트륨", "수산화칼슘", "수산화칼륨"]  #강염기 리스트
wb = ["암모니아"]  #약염기 리스트

if e == "산염기" or e == "산염기 적정" or e == "산염기적정" :  #사용자가 산염기 적정 실험을 선택하면
    a = input("실험에 사용할 산의 화학식명을 입력해주세요. 예: 염산, 황산, 질산 등")  #적정실험에 사용할 산 표준용액의 종류를 입력받고
    if a == "염산" or a == "질산" or a == "하이퍼아염소산" or a == "아세트산" :
        na = 1
    elif a == "황산" or a == "아염소산" :
        na = 2
    elif a == "염소산" :
        na = 3
    #입력받은 산의 가수(na)값을 결정한다.
        
    b = input("실험에 사용할 염기의 화학식명을 입력해주세요. 예: 수산화나트륨, 수산화칼슘, 수산화칼륨 등")  #적정실험에 사용할 염기 용액의 종류를 입력받고
    if b == "수산화칼슘" :
        nb = 2    
    elif b == "수산화나트륨" or b == "수산화칼륨" or b == "암모니아" :
        nb = 1
    #입력받은 염기의 가수(nb)값을 결정한다.
    
    if a in sa and b in sb :
        In = "BTB용액"
    elif a in sa and b in wb :
        In = "메틸오렌지"
    elif a in wa and b in sb :
        In = "페놀프탈레인"
    elif a in wa and b in wb :
        print("약산과 약염기의 적정은 적절하지 않습니다.")
    #적정에 사용하는 산과 염기의 강산, 약산, 강염기, 약염기 조합에 따라 적절한 지시약을 결정하거나 혹은 해당 조합이 적정실험에 적절하지 않음을 알려준다. 
        
    if a not in wa and b not in wb :
        #불가능한 약산, 약염기 적정을 제외한 나머지 경우에 대해서 실험 준비물을 알려준다.
        msg = "실험에 필요한 준비물은 증류수, 피펫, 뷰렛, 삼각플라스크, 교반기, 마그내틱 바, 유리막대, 약포지, 약숟가락, 전자저울", a, b, In, "입니다. 준비가 완료되면 실험시작을 입력해주세요!"
        ex = input(msg)  #input함수 내에 표시할 것을 치환(?)
        if ex == "실험시작" :
            intro = input("지금부터 실험과정이 표시됩니다. 실험의 다음 단계로 넘어가고 싶으면 다음이라고 입력해주세요.")
            time.sleep(1)
            if intro == "다음" :
                n1 = input("피펫을 이용하여 산 표준 용액을 원하는 부피만큼 정확히 취하여 여유가 있는 크기의 삼각 플라스크에 담고 지시약을 두세방울 떨어뜨려주세요.")
                time.sleep(1)
                if n1 == "다음" :
                    n2 = input("사용할 미지농도의 염기 용액을 뷰렛에 담고 뷰렛을 삼각플라스크 위쪽으로 고정시켜주세요.")
                    time.sleep(1)
                    if n2 == "다음" :
                        bv = input("염기 용액을 천천히 떨어뜨리면서 당량점을 찾아주세요. 소모된 염기의 부피를 입력하세요.")
                        time.sleep(1)
        #실제 실험을 하듯이 '다음'을 입력하면 시간차를 두고 실험과정을 출력하여 실험을 진행할 수 있도록 하고 실험에서 소모된 염기의 부피를 입력받는다. 
        
                        ac = input("사용한 산 표준용액의 몰농도를 단위없이 입력해주세요.")
                        av = input("사용한 산 표준용액의 mL부피를 단위없이 입력해주세요.")
                        bc = int(ac) * int(av) * int(na) / int(bv)
                        bcc = int(bc) / int(nb)
                        # nMV = n'M'V' 식을 통해 사용한 염기용액의 몰농도를 계산하여 출력하고 실험을 마무리한다. 
                        print("사용한 염기 수용액의 몰농도는", int(bcc), "입니다. 사용하고 남은 산과 염기 용액은 반드시 폐수통에 버려주시기 바랍니다.")
                        

if e == "산화환원" or e == "산화환원 적정" or e == "산화환원적정" :  #사용자가 산화환원 적정실험을 선택하면
    a1 = input("산화되는 물질의 산화 전 산화수를 입력해주세요.")
    a2 = input("산화되는 물질의 산화 후 산화수를 입력해주세요.")
    da = int(a2) - int(a1)
    #반응 전후의 산화수를 입력받아 산화반쪽 반응을 통해 이동하는 전자수를 파악한다. 
    b1 = input("환원되는 물질의 산화 전 산화수를 입력해주세요.")
    b2 = input("환원되는 물질의 산화 후 산화수를 입력해주세요.")
    db = int(b1) - int(b2)
    #반응 전후의 산화수를 입력받아 환원반쪽 반응을 통해 이동하는 전자수를 파악한다. 
    tt = "산화되는 물질과 환원되는 물질의 반응 몰수 비는", int(db),"대", int(da), "입니다. 실험을 시작하려면 시작을 입력해주세요."
    #계산한 산화수 변화를 통해 물질의 반응 몰수비를 계산하여 출력하고 실험을 시작한다. 
    exst = input(tt)
    if exst == "시작" :
        msg = "실험에 필요한 준비물은 증류수, 피펫, 뷰렛, 삼각플라스크, 교반기, 마그내틱 바, 유리막대, 약포지, 약숟가락, 전자저울, 산화제 용액, 환원제 용액, 산화환원 지시약입니다. 준비가 완료되면 실험시작을 입력해주세요!"
        ex = input(msg)  #input함수 내에 표시할 것을 치환(?)
        if ex == "실험시작" :
            intro = input("지금부터 실험과정이 표시됩니다. 실험의 다음 단계로 넘어가고 싶으면 다음이라고 입력해주세요.")
            time.sleep(1)
            if intro == "다음" :
                n1 = input("피펫을 이용하여 산화제 표준 용액을 원하는 부피만큼 정확히 취하여 여유가 있는 크기의 삼각 플라스크에 담고 지시약을 두세방울 떨어뜨려주세요.")
                time.sleep(1)
                if n1 == "다음" :
                    n2 = input("사용할 미지농도의 환원제 용액을 뷰렛에 담고 뷰렛을 삼각플라스크 위쪽으로 고정시켜주세요.")
                    time.sleep(1)
                    if n2 == "다음" :
                        bv = input("환원제 용액을 천천히 떨어뜨리면서 지시약의 색이 변하는 당량점을 찾아주세요. 소모된 환원제의 부피를 입력하세요.")
                        time.sleep(1)
            #실제 실험을 하듯이 '다음'을 입력하면 시간차를 두고 실험과정을 출력하여 실험을 진행할 수 있도록 하고 실험에서 소모된 환원제 용액의 부피를 입력받는다. 

                        ac = input("사용한 산화제 표준용액의 몰농도를 단위없이 입력해주세요.")
                        av = input("사용한 산화제 표준용액의 mL부피를 단위없이 입력해주세요.")
                        bc = int(ac) * int(av) / int(bv)
                        x = int(bc) * int(db) / int(da)
                        print("사용한 환원제 수용액의 몰농도는", int(x), "입니다. 사용하고 남은 용액은 반드시 폐수통에 버려주시기 바랍니다.")
5)내가 기여한 내용에 대한 설명
산염기에 대한 실험을 진행하기 위해 산과 염기의 종류를 구했을때 혹시나 실수했을때를 염려해, 다시 화학종을 입력할 수 있는 코드를 작성하였다.
6)내가 기여한 내용의 반영 여부 : X
