전체 프로젝트 공유 : https://bit.ly/2ZaI9sJ

0. 학번 : 2207

[프로젝트 1 : 특정 염기서열의 제한효소가 플라스미드 DNA 상에서 작용하는 제한효소자리를 찾아주는 프로그램]
1)연구소 이름 :  T form Lab
2)연구소가 해결하려는 문제 : 임의의 제한효소에 대해 DNA 상에서 제한효소가 작용할 위치를 알려주는 서비스가 부족한 문제를 겪고 있는 플라즈마
3)연구소의 깃헙 링크 : https://github.com/newton1101/hshs-2-1-project/blob/master/README.md
4)내가 기여한 내용
1. E.coli = 'TTAACCTATAAAAATAGGCGTATCACGAGGCAGAATTTCAGATAAAAAAAATCCTTAGCTTTCGCTAAGG' +'ATGATTTCTGGAATTCGCGGCCGCTTCTAGAGTTGACGGCTAGCTCAGTCCTAGGTACAGTGCTAGCTAC' +'TAGAGAAAGAGGAGAAATACTAGATGGCCGGCGCACGCAACGCGACCAATAAGCTCCTGCACAAAGCGAA' +'AAAAAGCAAAAGCGATGAGTTTTATACCCAGTATTGCGACATTGAAAACGAATTACAATACTACCGCGAA' +'CATTTCAGCGATAAGGTTGTGTACTGCAACTGTGATGACCCGCGTGTGAGCAATTTTTTTAAATATTTCG' +'CGGTGAACTTTGACAACCTCGGACTGAAGAAGCTGATTGCAAGCTGTTATGTAGAAAACAAGGAGGGCTT' +'TAGCTCCAGCGAAGCAGCAAAAAATGGCTTTTACTATGAATACCATAAAGAAAACGGCAAAAAACTGGTC' +'TTCGATGATATTTCGGTGAGTAGCTTCTGTGGCGACGGAGATTTTCGGAGCAGTGAAAGCATTGATCTGC' +'TCAAAAAAAGTGATATCGTGGTCACGAACCCGCCTTTTTCACTCTTTCGTGAATACTTAGATCAACTTAT' +'TAAATACGATAAAAAGTTCCTTATCATCGCCAATGTAAACAGCATTACTTATAAAGAAGTGTTTAATCTG' +'ATCAAAGAAAACAAGATCTGGCTGGGAGTACATTTAGGCCGGGGTGTGAGTGGCTTCATCGTTCCAGAAC' +'ATTACGAACTGTACGGCACCGAGGCCCGCATTGATTCAAATGGAAACCGTATTATCAGCCCGAATAACTG' +'TCTGTGGCTGACGAACCTTGACGTCTTCATTCGCCACAAAGACCTGCCGTTAACACGTAAATACTTTGGA' +'AACGAAAGCTCGTAC'
2.    for i in range(0, len(E.coli) - len(pattern)+1) :
3.     for i in range(len(E.coli)-len(pattern)+2,len(E.coli)):
        if E.coli[i:len(E.coli)]==pattern[0:len(E.coli)-i] and E.coli[0:len(E.coli)-i] == pattern[len(E.coli)-i:len(pattern)]:
            pattern_list.append(i+1)
4.print(i, len(pattern_list))
5)내가 기여한 내용에 대한 설명
1. -> 대장균의 플라스미드 서열이 담긴 값의 명칭으로 대장균의 이름이 아닌 제한효소의 이름이 쓰여 이름을 EcoRI에서 E.coli로 바꿔 주었다.
2. -> range의 범위에서 제한효소의 특성을 고려하면 뒷 범위에 1을 더해주는 것이 맞아 수정했다.
3. 원코드에서는 복제원점을 기준으로 플라스미드의 염기서열을 일렬로 나열하였으나, 원형의 플라스미드 성질상 복제원점 부근의 염기서열을 제한효소자리로 하는 제한효소의 경우 잘려야 하는 부분이 모두 나오지 않는다. 이를 보완해주었고, 이런 경우와 원래 경우를 구분하기 위해 이럴 경우 제한 부위가 처음 나오는 부분의 번호만 써주는 것으로 설정했다.
4. 몇 개의 제한효소 절편이 생기는지 확인할 수 있는 코드를 추가했다.
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)

[프로젝트 2 : 헨더슨-하셀 바흐 식을 통해 산-염기 적정 곡선 그리기]
1)연구소 이름 : 럭셔리 연구소
2)연구소가 해결하려는 문제 : 화학실험시간에 산염기 적정곡선을 해석하지 못하여 어려움을 겪고 있는 신정서 학생의 문제를 해결하기 위한 프로젝트입니다.
3)연구소의 깃헙 링크 : https://github.com/jeongseo0503/luxuryproject
4)내가 기여한 내용
(코드, 주석, 문서화 등 내가 기여한 내용을 복붙해주세요)
5)내가 기여한 내용에 대한 설명
다양성자의 적정 곡선을 그릴 수 있는 기능을 추가했다, pKa<10-6인 약산에 대해서도 적정곡선을 그릴 수 있는 기능을 추가했다.
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)

[프로젝트 3 : 길 찾기 문제 해결 프로그램의 코드 오류 수정]
1)연구소 이름 : (공유 파일에서 복붙하세요)
2)연구소가 해결하려는 문제 : (공유 파일에서 복붙하세요)
3)연구소의 깃헙 링크 : (공유 파일에서 복붙하세요)
4)내가 기여한 내용
a = list(map(int, input("출발 지점의 x,y 좌푯값을 입력해주세요.").split()))
b = list(map(int, input("도착 지점의 x,y 좌푯값을 입력해주세요.").split()))
def BBareun(ini, fin):
    x = fin[0] - ini[0]
    y = fin[1] - ini[1]
    return Combination(x+y,min(x,y))
def Fact(n):
    if n==1: return 1
    return Fact(n-1)*n
def Combination(n,r):
    return Fact(n-r+1)/Fact(r)
c=list(map(int, input("장애물이 놓여있는 지점의 x,y 좌푯값을 입력해주세요.").split())) #장애물을 점으로 볼 수 있는 경우
def Pihaega(ini,fin,obs):
    return BBareun(ini,fin)-BBareun(ini,obs)*BBareun(obs,fin)
print(Pihaega(a,b,c))
        
5)내가 기여한 내용에 대한 설명
좌표계를 구현하는 데 실패하여 길찾기 문제를 해결하지 못했다고 해서 이를 list를 통해 구현할 수 있도록 하고 이렇게 구현한 좌표계를 통해 최단경로와 점 크기의 장애물이 있을 때 이를 지나지 않고 도달할 수 있는 최단경로의 경우의 수를 구할 수 있는 함수를 만들었다.
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)
