전체 프로젝트 공유 : https://bit.ly/2ZaI9sJ

0. 학번 : 2706

[프로젝트 1 : 특정 염기서열의 제한효소가 플라스미드 DNA상에서 작용하는 제한효소자리를 찾아주는 프로그램]
1) 연구소 명 : T Form Lab
2) 연구소가 해결 될 문제 : 임의의 제한효소에 대해 DNA 상에서 제한효소가 작용할 위치를 알려주는 서비스가 부족한 문제를 겪고 있는 학생
3) 연구소의 깃헙 링크 : https://github.com/newton1101/hshs-2-1-project/blob/master/README.md
4) 내가 기여한 내용

def Limit_enzyme(EcoRI): #제한효소자리 길이를 구하기 위한 리스트 제작
    limit_enzyme_list = []
    for i in range(0, len(EcoRI) - len(pattern)) :
        if EcoRI[i:i+len(pattern)] == pattern : 
            limit_enzyme_list.append((i+1))
            
    base_pair_list = []
    for i in range (0, len(pattern)-2) :
        if len(limit_enzyme_list) == 0 or 1:
            base_pair_list.append(len(EcoRI))
        else :
            base_pair_list.append(limit_enzyme_list[i+1]-limit_enzyme_list[i]) #제한효소 부착자리 개수에 따른 절편의 길이 구하기
            base_pair_list.append(len(EcoRI) - (limit_enzyme_list[-1] - limit_enzyme_list[0])) #제한효소 절편들중 세어지지 않은 절편 1개 셈
    return base_pair_list

pattern = (input('사용할 제한효소의 염기서열을입력해주세요.').upper())

y = cke(EcoRI, pattern)
z = Limit_enzyme(EcoRI)
for s in range(len(y)):    
    print(y[s][0],'번째 염기서열에',y[s][1],'의 제한효소 부착자리가 존재')
    print(str(z)[s][0],'bp')
if len(y) == 0:
    print('그런거없다')

코드 추가

5) 내가 기여한 내용에 대한 설명
단순히 몇번째 염기서열에 무슨 염기서열이 제한효소에 의해 잘리는지를 보여주는 게 아닌
첫번째 염기서열로부터 몇 번째에 염기서열에 제한효소가 존재하는 지를 구현하였다.
또한 제한효소에 의해 잘린 염기서열의 길이도 나타낼 수 있도록 하였다.
마지막으로 제한효소자리가 존재하지 않을 경우에 대비하여 '그런거 없다'라는 문구가 뜨도록 추가 
6) 내가 기여한 내용의 반영 가능성 : O

[프로젝트 2 : 학생 수행평가 관리 일정표 제작 주석 추가]
1) 연구소 명 : 레바의 연구소
2) 연구소가 해결 될 문제 : 평소 수행평가 때문에 일정 관리에 어려움을 겪고 있는 한성과학고 학생들
3) 연구소의 깃헙 링크 : https://github.com/KimKi-chan/Reva-Land
4) 내가 기여한 내용

class assignment:
    def __init__(self):
        name = input("수행평가의 이름: ") #코드 사용자가 수행평가 이름 입력
        teacher = input("수행평가 담당 선생님: ") #코드 사용자가 담당 선생님 이름 입력
        month, day = input("제출 기한: ").split("/") #코드 사용자가 제출기한 입력
        X = input("난이도: ") #코드 사용자가 난이도 입력
        self.name = name 
        self.teacher = teacher
        self.month = month
        self.day = int(day)
        if X in ['1', '2', '3', '4', '5']: #몇일전부터 수행평가를 시작할지를 정해줌
            self.X = X
            
class Stack: #코드에 쓰이는 클래스 구현
    def __init__(self, k = []) :
        self.items = k
    def isEmpt(self) :
        return self.items == []
    def push(self, item) :
        self.items.append(item)
    def pop(self) :
        return self.items.pop()
    def peek(self) :
        return self.items[-1]
    def size(self) :
        return len(self.items)
    
from pandas import Series #달력에 수행평가 표현하기 
import numpy as np
import pandas as pd
import calendar
from IPython.display import display
k = []
for i in range(0, 10000):
    Q = input('수행평가를 입력하세요: O or X : ') #수행평가 입력 여부 확인
    if Q == 'O': #수행평가 입력
        k.append(assignment())
    if Q == 'X': #수행평가 입력 안함 - 앞서 입력한데까지만 입력
        break
U = Stack()

def calen(n, items): #달력 구현 - 일정을 상세히 알려줌 - 달력을 표의 형태로 만듦
    z = 0 
    A = calendar.monthrange(2019,n) #해당 년도,달 설정
    X = ['']*35 #5주 - 7 X 5 = 35
    Y = [['']*7, ['']*7, ['']*7, ['']*7, ['']*7] #표의 달력 구성 요소에 숫자(날짜) 입력  - 리스트 이용
    D = [['']*7, ['']*7, ['']*7, ['']*7, ['']*7] #표의 달력 구성 요소에 숫자(날짜) 입력  - 리스트 이용
    for i in range (0, A[1]):
        X[i+A[0]] = i+1
    for i in range (0, 5):
        for j in range(0, 7):
            Y[i][j] = X[7*i+j] #다음 주
    for a in range(0, len(items)): #날짜 밑에 있는 칸에 수행평가 일정 표현하기 
         for i in range (0,5):
            for j in range (0, 7):
                if Y[i][j] == items[a].day:
                    for k in range(0, int(items[a].X)):
                        D[i][j-k] = D[i][j-k]+items[a].name
    
    cal = np.array([Y[0], D[0], Y[1], D[1], Y[2], D[2], Y[3], D[3], Y[4], D[4]]) #1,2,3,4 주 달력 표현
    pd.DataFrame(cal)
    display(pd.DataFrame(data = cal, columns = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'], index = ['', '', '', '', '', '', '', '', '', ''])) #맨 위에 요일 표현
    
calen(4, k) #사용자가 월을 입력해야 함 - 이 코드에는 4월

5) 내가 기여한 내용에 대한 설명
코드마다 자세한 주석 추가
6) 내가 기여한 내용의 반영 가능성 : O

[프로젝트 3 : 한성과고 맞춤 학습 플래너 개발]
1) 연구소 명 : 지오이드 연구소
2) 연구소가 해결 될 문제 : 공부 시간 분배에 대한 갈피를 못 잡고 있는 한성과고 학생, 자신의 공부 시간이나 스타일에 대해서 알고 싶은 학생,  중간고사 성적을 바탕으로 기말고사 공부에 피드백을 받고 싶은 학생 등등 성적 문제로 고민이 많은 학생들은 한 번 써 봤으면 좋겠다. 당장 유근이와 나도 한 번 써보기로 했다.
3) 연구소의 깃헙 링크 : https://github.com/ohyunsik/Ji-You-Guen
4) 내가 기여한 내용
코드에 매우 자세한 주석 추가
5) 내가 기여한 내용에 대한 설명
코드에 매우 자세한 주석 추가
6) 내가 기여한 내용의 반영 가능성 : 
